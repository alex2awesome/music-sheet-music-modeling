#!/bin/sh
###################################################################
#
# DUR
#
# Programmed by: Tim Racinsky         Date: July, 1993
# Copyright (c) 1993 David Huron
#
# Modifications:
#   Date:      Programmer:        Description:
# June 7/94	Tim Racinsky	Modified for getopts command
#
#
#	This shell program receives input from the command line and after 
# checking it, passes it to the program dur.awk.
#
OPTIONS=""
TEMPO_TYPE=""
TEMPO=""
FILENAME=""
HELP=""
STNDIN=""
FLAG=""
USAGE1="USAGE: dur -h                 (Help Screen)"
USAGE2="       dur [-x] [-t num | -T num | -m num | -M num] [file ...]"
DUALCASE=1

if [ -z $AWK_VER ]
then
   AWK_VER=`which awk`
   if [ -z $AWK_VER ]
   then
      AWK_VER=`which gawk`
   fi
   if [ -z $AWK_VER ]
   then
      exit 1
   fi
fi

if [ -z $HUMDRUM ]
then
   HUMDRUM=`echo $PATH | tr : '\n' | grep 'humdrum/bin$' | head -n 1 | sed 's/\/bin$//'`
fi

while getopts hm:M:t:T:x arg
do
	case "$arg" in
 	[tTmM])
		# Only one of tTmM may be specified
		if [ -n "$TEMPO_TYPE" ]
	 	then
			echo "dur: ERROR: Cannot specify more than one of -t, -T, -m, or -M on" 1>&2
			echo "            the command line." 1>&2
			echo "" 1>&2
			echo "$USAGE1" 1>&2
			echo "$USAGE2" 1>&2
			exit
		else
			TEMPO_TYPE="$arg"
			TEMPO="${OPTARG}"
		fi ;;
	h) 	HELP="ON";;
	x)  	OPTIONS="$OPTIONS${arg}";;
	[?])	echo "" 1>&2
		echo "$USAGE1" 1>&2
		echo "$USAGE2" 1>&2
		exit;;
	esac
done
shift `expr $OPTIND - 1`
# If the help variable has been specified, print the help screen
if [ -n "$HELP" ]
then
	if [ -f ${HUMDRUM}/bin/helpscrn/dur.hlp ]
	then
		cat ${HUMDRUM}/bin/helpscrn/dur.hlp
	else
		echo "No help available on this command."
	fi
	exit
fi
# Process any remaining filenames
while [ "$#" -ne 0 ]
do
	# If the user specifies - for standard input
	if [ x"$1" = x- ]
	then
		# Allow only one '-' for each invocation
		if [ -z "$STNDIN" ]
		then
			FILENAME="$FILENAME -"
			STNDIN="ON"
			shift
		else
			shift
		fi
	elif [ -f "$1" ]
	then
		FILENAME="$FILENAME $1"
		shift
	else
		echo "dur: ERROR: File not found: $1" 1>&2
		FLAG="ON"
		shift
	fi
done	
# If only invalid files specified, exit program
if [ "X$FILENAME" = X -a -n "$FLAG" ]
then
	exit
fi	
if [ -z $FILENAME ]
then
   FILENAME="-"
fi 
# Invoke dur.awk with the specified options.
$AWK_VER -f ${HUMDRUM}/bin/dur.awk "DUMMY" "${OPTIONS:-null}" "${TEMPO_TYPE:-null}" "${TEMPO:-null}" $FILENAME
