#!/bin/sh
###################################################################
#
# RID
#
# Programmed by: Tim Racinsky        Date: July, 1993
# Copyright (c) 1993 David Huron
#
# Modifications:
#   Date:      Programmer:       	Description:
# May 11/94	Tim Racinsky	Added -U/-u and -T options
# June 7/94	Tim Racinsky	Modified to use getopts
# July 29/94	Tim Racinsky	Modified to work with rid_ executable
#
#
# This shell program is used to invoke the awk program rid.awk with
# the appropriate options that were specified on the command line.
#
OPTIONS=""
HELP=""
FLAG=""
STNDIN=""
FOUND=""
USAGE1="USAGE: rid -h                   (Help Screen)"
USAGE2="       rid [-dgiluDGILTU] [file ...]"
# 
DUALCASE=1

if [ -z $HUMDRUM ]
then
   HUMDRUM=`echo $PATH | tr : '\n' | grep 'humdrum/bin$' | head -n 1 | sed 's/\/bin$//'`
fi

while getopts dDgGhiIlLTuU arg
do
	case "$arg" in
	h) 	HELP="ON" ;;
     [dDgGiIlLTuU])
		OPTIONS="$OPTIONS${arg}" ;;
	[?])
		echo "" 1>&2
		echo "$USAGE1" 1>&2
		echo "$USAGE2" 1>&2
		exit ;;
	esac
done
shift `expr $OPTIND - 1`
# If no parameters were specified, print out a help screen
if [ -n "$HELP" ]
then
	if [ -f ${HUMDRUM}/bin/helpscrn/rid.hlp ]
	then
		cat ${HUMDRUM}/bin/helpscrn/rid.hlp
	else
		echo "No help available on this command."
	fi
	exit
fi
if [ "X$OPTIONS" = X ]
then
	echo "rid: ERROR: No option has been specified." 1>&2
	echo "" 1>&2
	echo "$USAGE1" 1>&2
	echo "$USAGE2" 1>&2
	exit
fi
# Process any remaining filenames
while [ "$#" -ne 0 ]
do
	# A '-' specifies standard input
	if [ x"$1" = x- ]
	then
		# Only one '-' is allowed
		if [ -z "$STNDIN" ]
		then
			STNDIN="ON"
			rid_ "$OPTIONS"
			shift
		else
			shift
		fi
	elif [ -f "$1" ]
	then
		FOUND="ON"
		rid_ "$OPTIONS" $1
		shift
	else
		echo "rid: ERROR: File not found: $1" 1>&2
		FLAG="ON"
		shift
	fi
done	
# If no files specified, processes with no filename
if [ -z "${FOUND}" -a -z "${STNDIN}" -a -z "${FLAG}" ]
then
	rid_ "$OPTIONS"
fi	
