#!/bin/sh
###################################################################
#
# EXTRACT
#
# Programmed by: Tim Racinsky       Date: July, 1993
# Copyright (c) 1993 David Huron
#
# Modifications:
#    Date:    Programmer:        Description:
# June 7/94	Tim Racinsky	Added getopts command
#
#
#	A korn shell script to parse commands for the extract command
# and invoke the right extract program.
#
OPTION=""
LIST=""
FILENAME=""
HELP=""
FLAG=""
STNDIN=""
#
USAGE1="USAGE: extract -h                   (Help Screen)"
USAGE2="       extract -f field_list [file ...]"
USAGE3="       extract -t tracefile [file ...]"
USAGE4="       extract -i interpretation_list [file ...]"
USAGE5="       extract -p spine_path [file ...]"

if [ -z $AWK_VER ]
then
   AWK_VER=`which awk`
   if [ -z $AWK_VER ]
   then
      AWK_VER=`which gawk`
   fi
   if [ -z $AWK_VER ]
   then
      exit 1
   fi
fi

if [ -z $HUMDRUM ]
then
   HUMDRUM=`echo $PATH | tr : '\n' | grep 'humdrum/bin$' | head -n 1 | sed 's/\/bin$//'`
fi

#
while getopts f:hi:p:t: arg
do
	case "$arg" in
	[fip])
		if [ -n "$OPTION" ]
		then
			echo "extract: ERROR: Cannot specify more than one of -f,-t,-i, or -p." 1>&2
			echo "" 1>&2
			echo "$USAGE1" 1>&2
			echo "$USAGE2" 1>&2
			echo "$USAGE3" 1>&2
			echo "$USAGE4" 1>&2
			echo "$USAGE5" 1>&2
			exit
		fi
		OPTION=${arg}
		LIST=${OPTARG};;
	t) 	if [ -n "$OPTION" ]
		then
			echo "extract: ERROR: Cannot specify more than one of -f,-t,-i, or -p." 1>&2
			echo "" 1>&2
			echo "$USAGE1" 1>&2
			echo "$USAGE2" 1>&2
			echo "$USAGE3" 1>&2
			echo "$USAGE4" 1>&2
			echo "$USAGE5" 1>&2
			exit
		fi
		OPTION=${arg}
		if [ ! -f "${OPTARG}" ]
		then
			echo "extract: ERROR: Invalid filename specified as trace file" 1>&2
			echo "" 1>&2
			echo "$USAGE1" 1>&2
			echo "$USAGE2" 1>&2
			echo "$USAGE3" 1>&2
			echo "$USAGE4" 1>&2
			echo "$USAGE5" 1>&2
			exit
		# Otherwise store it in LIST
		else
			LIST=${OPTARG}
		fi;;
	h) 	HELP="ON";;
     [?])	echo "" 1>&2
		echo "$USAGE1" 1>&2
		echo "$USAGE2" 1>&2
		echo "$USAGE3" 1>&2
		echo "$USAGE4" 1>&2
		echo "$USAGE5" 1>&2
		exit ;;
	esac
done
shift `expr $OPTIND - 1`
# If no options were specified, print a help screen
if [ -n "$HELP" ]
then
	if [ -f ${HUMDRUM}/bin/helpscrn/extract.hlp ]
	then
		cat ${HUMDRUM}/bin/helpscrn/extract.hlp
	else
		echo "No help available on this command."
	fi
	exit
fi
# If none of the above options were the first parameter, print an error
if [ "X$OPTION" = X ]
then
	echo "extract: ERROR: No option has been specified." 1>&2
	echo "" 1>&2
	echo "$USAGE1" 1>&2
	echo "$USAGE2" 1>&2
	echo "$USAGE3" 1>&2
	echo "$USAGE4" 1>&2
	echo "$USAGE5" 1>&2
	exit
fi
# Process any remaining filenames
while [ "$#" -ne 0 ]
do
	# A '-' specifies standard input
	if [ x"$1" = x- ]
	then
		# Can only use '-' once for each command
		if [ -z "$STNDIN" ]
		then
			FILENAME="$FILENAME $1"
			STNDIN="ON"
			shift
		else
			shift
		fi
	elif [ -f "$1" ]
	then
		FILENAME="$FILENAME $1"
		shift
	else
		echo "extract: ERROR: File not found: $1" 1>&2
		FLAG="ON"
		shift
	fi
done	
# If only invalid files specified, exit
if [ "X$FILENAME" = X -a -n "$FLAG" ]
then
	exit
fi	
if [ -z $FILENAME ]
then
   FILENAME="-"
fi 
# Depending on which option was specified, invoke proper extract program
case $OPTION in	
	f) $AWK_VER -f ${HUMDRUM}/bin/extract1.awk "DUMMY" "$LIST" $FILENAME ;;
	t) $AWK_VER -f ${HUMDRUM}/bin/extract2.awk "DUMMY" "$LIST" $FILENAME ;;
	i) $AWK_VER -f ${HUMDRUM}/bin/extract3.awk "DUMMY" "$LIST" $FILENAME ;;
	p) $AWK_VER -f ${HUMDRUM}/bin/extract4.awk "DUMMY" "$LIST" $FILENAME ;;
esac
