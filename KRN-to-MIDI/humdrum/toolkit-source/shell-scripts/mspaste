#!/bin/sh
###################################################################
#
# MSPASTE
#
#
# Programmed by: David Huron        Date: January, 1997
# Copyright (c) 1997 David Huron
#
# Modifications:
#   Date:      Programmer:       Description:
#
#
#	This script combines Mup data for two or more parts into
#	a single Mup-format output.  The input for this program is
#	generated by the "ms" command.

FILENUM=0
if [ -z "$TMPDIR" ]
then
   TMPDIR=/tmp
fi

while [ "$#" -ne 0 ]
do
	if [ -f "$1" ]
	then
		let FILENUM=$FILENUM+1
	else
		echo "mspaste: ERROR: File not found: $1" 1>&2
		exit
	fi
	# Preliminary processing for each file.
	# The output for each input file is stored in a temporary file.
	#
	# This script ensures that Mup "music" data for each bar consists
	# of precisely three output records: record 1 contains note data,
	# record 2 contains "phrase" data, and record 3 contains "lyrics" data.
	awk	'BEGIN {TRUE=1; FALSE=0; PROCESS=FALSE}
		{
		if (previous !~/^[ \t]*$/ && $0 ~/bar/ && $0 !~/baritone/) print ""
		previous = $0

		# Suppress all comments except dummy phrase and lyrics comments.
		if ($0 !~/^\/\// || $0 ~ /^\/\/phrase/ || $0 ~/^\/\/lyrics/)
			{
			if (PROCESS)
				{
				if ($0 ~/^[ \t]*$/)
					{
					print STAFF
					print $0
					PROCESS = FALSE
					}
				else
					{
					STAFF = STAFF "SEP" $0
					}
				next
				}
			else
				{
				if ($0 ~ /staff/ && $0 !~/staffs=/)
					{
					PROCESS = TRUE
					STAFF = $0
					next
					}
				print $0
				}
			}
		}' $1 > $TMPDIR/$$.$FILENUM
	shift
done

# All of the temporary files should be of identical length.
# Paste them together, eliminate duplicate information, and
# split note records, phrase records and lyrics records into
# separate lines for each staff.
paste $TMPDIR/$$.* | awk 'BEGIN {FS="\t"}
	{
	if ($0 ~ /^[0-9]/)	# Note data always begins with a number.
		{		# Print each staff on a separate line.
		for (i=1; i<= NF; i++) print $i
		}
	# Deal with header and staff information:
	else if ($0 ~ /staffs=/) print "        staffs=" NF
	else if ($0 ~ /header/ || $0 ~ /size/ || $0 ~ /title/ ||
		$0 ~ /footer/ || $0 ~ /score/ || $0 ~ /lyricssize/ ||
		$0 ~ /time/ || $0 ~ /beamstyle/ || $0 ~ /music/ ||
		$0 ~ /^bar/ || $0 ~/^dblbar/ || $0 ~/^endbar/ || $0 ~/repeatstart/ ||
		$0 ~ /repeatboth/ || $0 ~ /^repeatend/ || $0 ~ /^invisbar/ ||
		$0 ~ /newcentury/ ) print $1
	# Simply records consisting of just tabs.
	else if ($0 ~ /^	*$/) print ""
	# Revise the Mup "staff" records so it reports the total
	# number of staves present.
	else if ($0 ~ /^staff /)
		{
		for (i=1; i<=NF; i++)
			{
			num=split($i,array,"SEP")
			for (j=1; j<=num; j++) print array[j]
			}
		}
	# Break up "phrase" records; suppress mere dummy comments.
	else if ($0 ~ /^\/*phrase/)
		{
		for (i=1; i<=NF; i++)
			{
			num=split($i,array,"SEP")
			for (j=1; j<=num; j++)
				{
				if (array[j] !~ /\//) print array[j]
				}
			}
		}
	# Break up "lyrics" records; suppress mere dummy comments.
	else if ($0 ~ /^\/*lyrics/)
		{
		for (i=1; i<=NF; i++)
			{
			num=split($i,array,"SEP")
			for (j=1; j<=num; j++)
				{
				if (array[j] !~ /^\//) print array[j]
				}
			}
		}
	else print $0
	}'
rm $FILES $TMPDIR/$$.*
