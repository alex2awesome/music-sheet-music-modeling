\"    This documentation is copyright 1994 David Huron.
.TH mint 1 "1994 Dec. 4"
.AT 3
.sp 2
.SH "NAME"
.in +2
.in +10
.ti -10
\fBmint\fR  --  determine melodic intervals between successive pitches for Humdrum inputs
.in -10
.in -2
.sp 1
.sp 1
.SH "SYNOPSIS"
.in +2
.in +7
.ti -7
\fBmint\fR  [\fB-acd\fR]  [\fB-b \fIregexp\fR]  [\fB-s \fIregexp\fR]  [\fIinputfile\fR]  [ > \fIoutputfile.mnt\fR]
.in -7
.in -2
.sp 1
.sp 1
.SH "DESCRIPTION"
.in +2
The
.B "mint"
command determines the distance (interval) between successive pitches.
Output pitch intervals are expressed as a diatonic interval size plus
interval quality;
a leading plus or minus sign indicates whether the interval is ascending
or descending.
By way of illustration,
.B "mint"
will change a sequence of \f(CR**pitch\fR data tokens -- such as
.I "C4, A4, E4"
-- to the interval sequence
.I "\(plM6, \(miP4."
Each pitch-related input spine is transformed to a corresponding
\f(CR**mint\fR output spine.
.sp 1
.sp 1
The
.B "mint"
command determines melodic intervals only for pitch tokens
.I "within"
individual spines.
Pitch intervals
.I "across"
spines are not determined by
.B "mint."
.sp 1
.sp 1
No interval is calculated for the first pitch token;
initial pitches are simply echoed in the
output -- appearing in square brackets.
These initial pitches are referred to as
.I "offset"
values, since they indicate the starting value from which subsequent
intervals are calculated.
Offset values can prove useful in attempting to reconstruct the input,
but the user may wish to eliminate offset values in subsequent processing
(see below).
.sp 1
.sp 1
The
.B "mint"
command is able to handle multiple-stops.
Data-flow interruptions such as the occurrence of barlines
can be handled using the
.B "-s"
option.
By defining
.I "regular expression"
patterns, the user may select
which types of data tokens should be ignored by
.B "mint."
(See EXAMPLES below.)
.sp 1
.sp 1
Note that the output spine generated by
.B "mint"
preserves the same record-type structure as the input,
and so may readily be pasted with the input file using the Humdrum
.B "assemble"
command.
.sp 1
.sp 1
The
.B "mint"
command is able to accept any of the pitch-related
representations listed below.
For descriptions of the various input representations
refer to Section 2
.I "(Representation Reference)"
of this reference manual.
.sp 1
.sp 1
It is recommended that output files produced using the
.B "mint"
command should be given names with the distinguishing `.mnt' extension.
.sp 1
.TS
l l.
\f(CR**kern\fR	core pitch/duration representation
\f(CR**pitch\fR	American National Standards Institute pitch notation
	  (e.g. \(odA#4\(cd)
\f(CR**solfg\fR	French solf\o'e\(ga'ge system (fixed `doh')
\f(CR**Tonh\fR	German pitch system
.TE
.sp 1
.ce
.I "Input representations processed by \fBmint\fR."
.in -2
.SH "OPTIONS"
.in +2
The
.B "mint"
command provides the following options:
.sp 1
.TS
l l.
\fB-a\fR	output absolute pitch interval without distinguishing
	  ascending/descending
\fB-b \fIregexp\fR	break; do not calculate difference for tokens matching
	  \fIregexp\fR; restart interval calculations with next
	  pitch token
\fB-c\fR	output compound intervals as non-compound intervals
\fB-d\fR	output diatonic interval size only, without the
	  interval quality
\fB-h\fR	displays a help screen summarizing the command syntax
\fB-s \fIregexp\fR	skip; completely ignore tokens matching \fIregexp\fR;
	 (echo in output only)
.TE
.sp 1
Options are specified in the command line.
.sp 1
.sp 1
By default,
.B "mint"
distinguishes ascending and descending intervals by prepending
a plus or minus sign.
If the
.B "-a"
option is invoked, then only unsigned (absolute) intervals are output.
.sp 1
.sp 1
The \(odskip\(cd function takes precedence over the \(odbreak\(cd function,
so input strings matching both the skip (-s) and break (-b) regular
expressions cause a skip rather than a break.
.in -2
.sp 1
.sp 1
.SH "EXAMPLES"
.in +2
The various aspects of the
.B "mint"
command are best illustrated using a set of examples.
Consider the following input:
.in +2
.sp 1
.TS
l.
**kern
\(eq1
8c
8g
4.b-
\.
8e
\(eq2
4f
8r
8C
4FF
\(eq3
*-
.TE
.sp 1
.in -2
Using the default invocation, the
.B "mint"
command transforms the above input as follows:
.in +2
.sp 1
.TS
l.
**mint
\(eq1
[c]
+P5
+m3
\.
-d5
\(eq2
+m2
r
-P11
-P5
\(eq3
*-
.TE
.sp 1
.in -2
The leading or \(odoffset\(cd pitch `c' has been echoed in square brackets
in the third record.
This represents the initial pitch from which subsequent pitch distances
are measured.
This offset value reflects the type of input given to
.B "mint,"
thus if the input format is
**kern
the offset pitch will be recorded in the same representation.
Note that for absolute pitch units: `c' (\f(CR**kern\fR) equals `C4'
(\f(CR**pitch\fR) equals `do4' (\f(CR**solfg\fR) equals `C4' (\f(CR**Tonh\fR).
.sp 1
.sp 1
The subsequent output value (+P5) indicates a melodic interval
of an ascending perfect fifth.
This is followed by an ascending minor third (+m3) followed
by a descending diminished fifth (-d5).
.sp 1
.sp 1
Notice that the null-token in the sixth record has been echoed.
Null-tokens have no effect on interval calculations and are
treated as though they are non-existent.
In addition,
.B "mint"
correctly echoes (and ignores) both rests and kern-like barlines.
Note that pitch intervals spanning a rest continues to be calculated
and that intervals greater than an octave remain as \(odcompound intervals.\(cd
.sp 1
.sp 1
Depending on the application, users may wish to suppress the
calculation of intervals across rests.
In this case, the
.B "mint"
command can be invoked using the \(odbreak\(cd (\fB-b\fR) option.
Consider the command:
mint -b 'r' input > output.mnt\fR.
Each time
.B "mint"
encounters a data token that matches the letter `r' it
echoes the input token and begins
looking for a new offset value.
Applied to the earlier input file, this command produces the
following output:
.in +2
.sp 1
.TS
l.
**mint
\(eq1
[c]
+P5
+m3
\.
-d5
\(eq2
+m2
8r
[C]
-P5
\(eq3
*-
.TE
.sp 1
.in -2
Notice that the descending perfect eleventh spanning the rest has
been eliminated, and a new pitch offset value `C' has been echoed
in the corresponding output.
.sp 1
.sp 1
The
.B "-s"
(skip) option can be used to allow the user to selectively
identify records that should not be involved in processing.
For example, the command
.sp 1
.sp 1
.in +2
mint -s '^[^4]+$' input > output.mnt
.in -2
.sp 1
.sp 1
will cause any data token not matching the number 4 to be skipped
during processing.
Given the sample input, intervals will be calculated only
between quarter-notes and dotted quarter-notes:
.in +2
.sp 1
.TS
l.
**mint
\(eq1
8c
8g
[b-]
\.
8e
\(eq2
-P4
8r
8C
-P15
\(eq3
*-
.TE
.sp 1
.in -2
Using the skip option, the user may calculate melodic intervals
between pitches in strong metric positions, or pitches that have
been marked as structural tones.
.sp 1
.sp 1
The
.B "mint"
command is also able to process numerical data tokens containing
multiple-stops.
Consider the following following sample input:
.in +2
.sp 1
.TS
l.
**pitch
C4
B3 D4
A3 C4 F4
C4
C4
*-
.TE
.sp 1
.in -2
Notice the presence of the double- and triple-stops in the third and
fourth records.
Using the default invocation, the
.B "mint"
command processes this input as follows:
.in +2
.sp 1
.TS
l.
**mint
[C4]
-m2 +M2
-M2 (+m2) (-M2) +m3
+m3 P1 -P4
P1
*-
.TE
.sp 1
.in -2
The leading or offset value [C4] has been echoed in the second record.
(The user might wish to eliminate such offset values via the
.B "humsed"
command; see below.)
The third record in both the input and output contain double-stops.
In the output, the first value of the double-stop (-m2) represents
the pitch interval between C4 and B3.
The second value in the double-stop (M2) represents the difference
between C4 and D4.
In short,
.B "mint"
traces both possible difference \(odpaths.\(cd
.sp 1
.sp 1
In processing successive multiple-stops
.B "mint"
does not calculate all of the possible permutations.
For example, in the case of two consecutive triple-stops,
.B "mint"
will calculate three intervals corresponding to the first notes
in both triple-stops, the second notes, and the third notes.
.sp 1
.sp 1
Where the number of multiple-stops changes,
.B "mint"
operates under some special conventions.
Consider, for example, the case of a double-stop followed
by a triple-stop:
the pitches P+Q followed by X+Y+Z.
All of the possible (interval) differences might be enumerated as follows:
X-P, Y-P, Z-P, X-Q, Y-Q and Z-Q.
.B "Mint"
first calculates the \(odouter\(cd interval distances (X\(miP and Z\(miQ).
It then calculates a permuted set of \(odinner\(cd intervals
(Y\(miP and Y\(miQ).
The remaining intervals are considered unlikely or implausible and
are not calculated by
.B "mint."
.sp 1
.sp 1
In the above example,
moving from the double-stop to the triple stop between records three
and four generates two \(odouter\(cd interval distances
(B3 to A3 \(-> -M2; D4 to F4 \(-> +m3), as well as the permuted
\(odinner\(cd intervals (B3 to C4 \(-> +m2; D4 to C4 \(-> -M2).
Both the resulting inner intervals are printed in parentheses.
A similar process occurs when moving from records four to five.
Three intervals may be traced from the 3 initial pitches to the
subsequent single pitch.
.sp 1
.sp 1
Depending on the goal, the presence of the parentheses makes it easy
for the user to eliminate the inner intervals using the Humdrum
stream-editor
.B "humsed."
For example, the command
.sp 1
.sp 1
.in +2
humsed 's/([^)]*) //g' input > output
.in -2
.sp 1
.sp 1
can be used to eliminate inner intervals.
Alternatively, the command
.sp 1
.sp 1
.in +2
humsed 's/[()]//g' input > output
.in -2
.sp 1
.sp 1
can be used to eliminate the parentheses surrounding the inner intervals.
Offset values can be transformed to null-tokens using the command
.sp 1
.sp 1
.in +2
humsed 's/\\[[^]]*\\]/./g' input > output
.in -2
.sp 1
.sp 1
records containing offset values can be eliminated using the command
.sp 1
.sp 1
.in +2
humsed '/\\[.*\\]/d' input > output
.in -2
.sp 1
.sp 1
One final example illustrates how several spines can be processed
concurrently by
.B "mint."
.in +2
.sp 1
.TS
l s s
l l l.
!! J.S. Bach, keyboard Sinfonia No. 13
**Tonh	**pitch	**kern
*M3/8	*M3/8	*M3/8
*a:	*a:	*a:
=7	=7	=7
A3	G4	16ee
\.	.	16ff#
H3	F#4	8.dd#
H2	.	.
\.	.	16ee
=8	=8	=8
E3	E4	4ee
\.	F#4	.
\.	G4	.
\.	A4	.
r	B4	[8gg
\.	C#5	.
=9	=9	=9
r	[D5	16gg]
\.	.	16bb-
\.	.	16aa
\.	.	16gg
\.	.	16ff
\.	.	16ee
=10	=10	=10
r	D5]	[4.ff
*-	*-	*-
.TE
.sp 1
.in -2
The following command invokes the \fB-a\fR and \fB-d\fR options.
Indications of the direction of interval movement (ascending/descending)
have been removed, and the diatonic interval sizes are output
without the associated interval qualities (major/minor/perfect/diminished,
augmented).
.sp 1
.sp 1
.in +2
mint -a -d input | humsed 's/\\[[^\\t]*\\]/./g' > output
.in -2
.sp 1
.sp 1
Notice in the corresponding output that the initial offset pitches have
been changed to a null tokens (due to the
.B "humsed"
command).
.in +2
.sp 1
.TS
l s s
l l l.
!! J.S. Bach, keyboard Sinfonia No. 13
**mint	**mint	**mint
*M3/8	*M3/8	*M3/8
*a:	*a:	*a:
=7	=7	=7
\.	.	.
\.	.	2
2	2	3
8	.	.
\.	.	2
=8	=8	=8
4	2	1
\.	2	.
\.	2	.
\.	2	.
r	2	3
\.	2	.
=9	=9	=9
r	2	1
\.	.	3
\.	.	2
\.	.	2
\.	.	2
\.	.	2
=10	=10	=10
r	1	2
*-	*-	*-
.TE
.sp 1
.in -2
.in -2
.SH "PORTABILITY"
.in +2
\s-1DOS\s+1 2.0 and up, with the \s-1MKS\s+1 Toolkit.
\s-1OS/2\s+1 with the \s-1MKS\s+1 Toolkit.
\s-1UNIX\s+1 systems supporting the
.I "Korn"
shell or
.I "Bourne"
shell command interpreters, and revised
.I "awk"
(1985).
.in -2
.sp 1
.sp 1
.SH "SEE ALSO"
.in +2
\fB**hint\fR (2), \fBhint\fR (1),
\fBhumsed\fR (1), \fBkern\fR (2), \fB**mint\fR (2),
\fBrecode\fR (1), \fB**semits\fR (2),
\fBsemits\fR (1), \fBsolfg\fR (2), \fB**Tonh\fR (2),
\fBxdelta\fR (1), \fBydelta\fR (1)
.in -2
